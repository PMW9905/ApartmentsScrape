import json

from discord.ext import commands, tasks
from discord import Intents

import asyncio

from apartment_web_scraper import ApartmentWebScraper
from apartment_data import ApartmentData


# Config file will always be defined as config.json
# Must be generated by user before execution
config_file_path = 'config.json'

# Attempt to read json data into dict
print('Reading config data...')
try:
    opened_json_file = open(config_file_path, 'r')
    discord_bot_config = dict(json.load(opened_json_file))
    opened_json_file.close()
except Exception as e:
    print(f'Unable to open config file due to the following error:')
    print(e)
    quit()

# Spawning apartment_web_scraper
print('Spawning apartment_web_scraper...')
apartment_web_scraper = ApartmentWebScraper()
apartment_web_scraper.start_driver()

# Defining bot intents
print('Defining bot intents...')
intents = Intents.default()
intents.message_content = True

# Defining bot commands
print('Defining bot commands...')
bot = commands.Bot(command_prefix='!', intents = intents)

# Basic greet command
@bot.command(name='greet')
async def greet(ctx):
    print('Sending greeting...')
    await ctx.send('Hello!')
    
# Demo get apartments command
@bot.command(name='get-available-apartments')
async def get_available_apartments(ctx):
    url = 'https://www.apartments.com/crest-at-park-central-dallas-tx/pedmzer/'
    loop = asyncio.get_running_loop()

    print('Getting available apartments...')
    available_apartments = await loop.run_in_executor(None, apartment_web_scraper.get_available_apartments_from_url, url)

    for unit in available_apartments: 
        unit.print_all_data()

print('Running bot...')
bot.run(discord_bot_config['discord_bot_token'])

    